{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/captainspring/Desktop/code/WebSocket/myproject/clientx/src/Components/ChatBoxMessageBoxItem/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\n\nconst Index = props => {\n  _s();\n\n  const {\n    message,\n    username,\n    index,\n    handleDelete\n  } = props;\n  const [sentTime, setSentTime] = useState('');\n\n  const checkTime = () => {\n    let [day, month, year] = new Date().toLocaleDateString('en-GB').split('/');\n    let [hour, minute, second] = new Date().toLocaleTimeString('en-GB').split(/:| /);\n    let {\n      date\n    } = message;\n\n    if (parseInt(date.y) === parseInt(year) && parseInt(date.mo) === parseInt(month) && parseInt(date.d) === parseInt(day)) {\n      if (parseInt(date.h) !== parseInt(hour)) {\n        if (parseInt(hour) - parseInt(date.h) === 1) {\n          let time = 60 - parseInt(date.mi) + parseInt(minute);\n\n          if (time < 60) {\n            setSentTime(time + 'minutes ago');\n            return;\n          }\n        }\n\n        setSentTime(`${parseInt(hour) - parseInt(date.h)} hours ago`);\n        return;\n      }\n\n      if (parseInt(date.mi) !== parseInt(minute)) {\n        setSentTime(`${parseInt(minute) - parseInt(date.mi)} minutes ago`);\n        return;\n      } else {\n        setSentTime('Just now');\n        return;\n      }\n    }\n\n    setSentTime(`${date.h}:${date.mi}:${date.s} ${date.d}/${date.mo}/${date.y}`);\n  };\n\n  useEffect(() => {\n    checkTime();\n    setInterval(checkTime, 30000);\n    return () => {\n      clearInterval();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: message.username === username ? /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"your-mes message\",\n      children: [!message.isDelete ? /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"far fa-trash-alt\",\n        onClick: () => handleDelete(message)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: message.isDelete ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \" deleted\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 8\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"your-text-date\",\n        children: [\"Sent : \", sentTime, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"another-person-mes message\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-text-date\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"name\",\n          children: message.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: message.isDelete ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"deleted\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 8\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"another-text-date\",\n        children: [\"Sent : \", sentTime, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Index, \"w3LdZqjH/NxugR0Sb0Ax2rBgpDM=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/captainspring/Desktop/code/WebSocket/myproject/clientx/src/Components/ChatBoxMessageBoxItem/index.js"],"names":["React","useEffect","useState","Index","props","message","username","index","handleDelete","sentTime","setSentTime","checkTime","day","month","year","Date","toLocaleDateString","split","hour","minute","second","toLocaleTimeString","date","parseInt","y","mo","d","h","time","mi","s","setInterval","clearInterval","isDelete","text"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA,KAArB;AAA4BC,IAAAA;AAA5B,MAA6CJ,KAAnD;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;;AACA,QAAMS,SAAS,GAAG,MAAM;AACvB,QAAI,CAACC,GAAD,EAAMC,KAAN,EAAaC,IAAb,IAAqB,IAAIC,IAAJ,GACvBC,kBADuB,CACJ,OADI,EAEvBC,KAFuB,CAEjB,GAFiB,CAAzB;AAGA,QAAI,CAACC,IAAD,EAAOC,MAAP,EAAeC,MAAf,IAAyB,IAAIL,IAAJ,GAC3BM,kBAD2B,CACR,OADQ,EAE3BJ,KAF2B,CAErB,KAFqB,CAA7B;AAGA,QAAI;AAAEK,MAAAA;AAAF,QAAWjB,OAAf;;AACA,QACCkB,QAAQ,CAACD,IAAI,CAACE,CAAN,CAAR,KAAqBD,QAAQ,CAACT,IAAD,CAA7B,IACAS,QAAQ,CAACD,IAAI,CAACG,EAAN,CAAR,KAAsBF,QAAQ,CAACV,KAAD,CAD9B,IAEAU,QAAQ,CAACD,IAAI,CAACI,CAAN,CAAR,KAAqBH,QAAQ,CAACX,GAAD,CAH9B,EAIE;AACD,UAAIW,QAAQ,CAACD,IAAI,CAACK,CAAN,CAAR,KAAqBJ,QAAQ,CAACL,IAAD,CAAjC,EAAyC;AACxC,YAAIK,QAAQ,CAACL,IAAD,CAAR,GAAiBK,QAAQ,CAACD,IAAI,CAACK,CAAN,CAAzB,KAAsC,CAA1C,EAA6C;AAC5C,cAAIC,IAAI,GAAG,KAAKL,QAAQ,CAACD,IAAI,CAACO,EAAN,CAAb,GAAyBN,QAAQ,CAACJ,MAAD,CAA5C;;AACA,cAAIS,IAAI,GAAG,EAAX,EAAe;AACdlB,YAAAA,WAAW,CAACkB,IAAI,GAAG,aAAR,CAAX;AACA;AACA;AACD;;AACDlB,QAAAA,WAAW,CAAE,GAAEa,QAAQ,CAACL,IAAD,CAAR,GAAiBK,QAAQ,CAACD,IAAI,CAACK,CAAN,CAAS,YAAtC,CAAX;AACA;AACA;;AACD,UAAIJ,QAAQ,CAACD,IAAI,CAACO,EAAN,CAAR,KAAsBN,QAAQ,CAACJ,MAAD,CAAlC,EAA4C;AAC3CT,QAAAA,WAAW,CACT,GAAEa,QAAQ,CAACJ,MAAD,CAAR,GAAmBI,QAAQ,CAACD,IAAI,CAACO,EAAN,CAAU,cAD9B,CAAX;AAGA;AACA,OALD,MAKO;AACNnB,QAAAA,WAAW,CAAC,UAAD,CAAX;AACA;AACA;AACD;;AAEDA,IAAAA,WAAW,CACT,GAAEY,IAAI,CAACK,CAAE,IAAGL,IAAI,CAACO,EAAG,IAAGP,IAAI,CAACQ,CAAE,IAAGR,IAAI,CAACI,CAAE,IAAGJ,IAAI,CAACG,EAAG,IAAGH,IAAI,CAACE,CAAE,EADpD,CAAX;AAGA,GAtCD;;AAuCAvB,EAAAA,SAAS,CAAC,MAAM;AACfU,IAAAA,SAAS;AACToB,IAAAA,WAAW,CAACpB,SAAD,EAAY,KAAZ,CAAX;AACA,WAAO,MAAM;AACZqB,MAAAA,aAAa;AACb,KAFD;AAGA,GANQ,EAMN,EANM,CAAT;AAOA,sBACC;AAAA,cACE3B,OAAO,CAACC,QAAR,KAAqBA,QAArB,gBACA;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA,iBACE,CAACD,OAAO,CAAC4B,QAAT,gBACA;AACC,QAAA,SAAS,EAAC,kBADX;AAEC,QAAA,OAAO,EAAE,MAAMzB,YAAY,CAACH,OAAD;AAF5B;AAAA;AAAA;AAAA;AAAA,cADA,GAKG,IANL,eAOC;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBACEA,OAAO,CAAC4B,QAAR,gBACA;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA,oBAAyB5B,OAAO,CAAC6B;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADA,gBAGA;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA,oBAAqB7B,OAAO,CAAC6B;AAA7B;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cAPD,eAcC;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA,8BAAsCzB,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,cAdD;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,gBAkBA;AAAI,MAAA,SAAS,EAAC,4BAAd;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACC;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA,oBAAsBJ,OAAO,CAACC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAKC;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBACED,OAAO,CAAC4B,QAAR,gBACA;AAAG,UAAA,SAAS,EAAC,SAAb;AAAA,oBAAwB5B,OAAO,CAAC6B;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADA,gBAGA;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA,oBAAqB7B,OAAO,CAAC6B;AAA7B;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cALD,eAYC;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA,8BAAyCzB,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,cAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBF,mBADD;AAqCA,CAtFD;;GAAMN,K;;KAAAA,K;AAwFN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nconst Index = (props) => {\n\tconst { message, username, index, handleDelete } = props\n\tconst [sentTime, setSentTime] = useState('')\n\tconst checkTime = () => {\n\t\tlet [day, month, year] = new Date()\n\t\t\t.toLocaleDateString('en-GB')\n\t\t\t.split('/')\n\t\tlet [hour, minute, second] = new Date()\n\t\t\t.toLocaleTimeString('en-GB')\n\t\t\t.split(/:| /)\n\t\tlet { date } = message\n\t\tif (\n\t\t\tparseInt(date.y) === parseInt(year) &&\n\t\t\tparseInt(date.mo) === parseInt(month) &&\n\t\t\tparseInt(date.d) === parseInt(day)\n\t\t) {\n\t\t\tif (parseInt(date.h) !== parseInt(hour)) {\n\t\t\t\tif (parseInt(hour) - parseInt(date.h) === 1) {\n\t\t\t\t\tlet time = 60 - parseInt(date.mi) + parseInt(minute)\n\t\t\t\t\tif (time < 60) {\n\t\t\t\t\t\tsetSentTime(time + 'minutes ago')\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetSentTime(`${parseInt(hour) - parseInt(date.h)} hours ago`)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (parseInt(date.mi) !== parseInt(minute)) {\n\t\t\t\tsetSentTime(\n\t\t\t\t\t`${parseInt(minute) - parseInt(date.mi)} minutes ago`,\n\t\t\t\t)\n\t\t\t\treturn\n\t\t\t} else {\n\t\t\t\tsetSentTime('Just now')\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\n\t\tsetSentTime(\n\t\t\t`${date.h}:${date.mi}:${date.s} ${date.d}/${date.mo}/${date.y}`,\n\t\t)\n\t}\n\tuseEffect(() => {\n\t\tcheckTime()\n\t\tsetInterval(checkTime, 30000)\n\t\treturn () => {\n\t\t\tclearInterval()\n\t\t}\n\t}, [])\n\treturn (\n\t\t<>\n\t\t\t{message.username === username ? (\n\t\t\t\t<li className='your-mes message'>\n\t\t\t\t\t{!message.isDelete ? (\n\t\t\t\t\t\t<i\n\t\t\t\t\t\t\tclassName='far fa-trash-alt'\n\t\t\t\t\t\t\tonClick={() => handleDelete(message)}\n\t\t\t\t\t\t></i>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<div className='content'>\n\t\t\t\t\t\t{message.isDelete ? (\n\t\t\t\t\t\t\t<p className=' deleted'>{message.text}</p>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<p className='text'>{message.text}</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<p className='your-text-date'>Sent : {sentTime} </p>\n\t\t\t\t</li>\n\t\t\t) : (\n\t\t\t\t<li className='another-person-mes message'>\n\t\t\t\t\t<div className='name-text-date'>\n\t\t\t\t\t\t<h4 className='name'>{message.username}</h4>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='content'>\n\t\t\t\t\t\t{message.isDelete ? (\n\t\t\t\t\t\t\t<p className='deleted'>{message.text}</p>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<p className='text'>{message.text}</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<p className='another-text-date'>Sent : {sentTime} </p>\n\t\t\t\t</li>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}