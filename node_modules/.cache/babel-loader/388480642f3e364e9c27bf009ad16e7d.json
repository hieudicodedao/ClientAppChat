{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/captainspring/Desktop/code/WebSocket/myproject/clientx/src/Components/Logn-Form/Login-Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport Nontification from '../Login-nontification/Login-nontificaton';\nimport Reducer from '../../Reducer/Login';\nimport InitialState from '../../InitiaState/Login'; // import { Link } from 'react-router-dom'\n\nimport ReducerError from '../../Reducer/Error';\nimport Error from '../../InitiaState/Error';\nimport { GET_LIST_URL_FOR_LOGIN } from '../../Config/index';\n\nconst LoginForm = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(Reducer, InitialState);\n  const [errorState, dispatchError] = useReducer(ReducerError, Error);\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    const {\n      name,\n      room,\n      password\n    } = state;\n    const error = [];\n    let isError = false; //check if( any thing empty)\n\n    if (name === '') {\n      error.push(\"Name can't be empty\");\n      isError = true;\n    }\n\n    if (room === '') {\n      error.push(\"Room can't be empty\");\n      isError = true;\n    }\n\n    if (password === '') {\n      error.push(\"Password can't be empty\");\n      isError = true;\n    } //if room is exist\n\n\n    console.log(error);\n    let listRoom = null;\n    await fetch(GET_LIST_URL_FOR_LOGIN).then(res => res.json()).then(rs => {\n      listRoom = rs;\n    }, error => {\n      console.log(error);\n    });\n\n    if (listRoom === null) {\n      error.push('Connection Error');\n      isError = true;\n    } else {\n      for (let i = 0; i < listRoom.length(); ++i) {\n        const room = listRoom[i];\n\n        if (room.room !== room) {\n          error.push('Room is not exist');\n          isError = true;\n        } else {\n          if (room.password !== password) {\n            error.push('Wrong password');\n            isError = true;\n          }\n        }\n      }\n    }\n\n    if (isError) console.log(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Enter your name\",\n        value: state.name,\n        onChange: e => dispatch({\n          type: 'UPDATE NAME',\n          payload: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"room\",\n        children: \"Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"room\",\n        id: \"room\",\n        placeholder: \"Enter room\",\n        value: state.room,\n        onChange: e => dispatch({\n          type: 'UPDATE ROOM',\n          payload: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"Enter password\",\n        value: state.password,\n        onChange: e => dispatch({\n          type: 'UPDATE PASSWORD',\n          payload: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn-sign-in\",\n        onClick: e => onSubmitForm(e),\n        children: \"GO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Nontification, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n};\n\n_s(LoginForm, \"/g4BdxQc/m6yAzTImTpsDdrHedE=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/captainspring/Desktop/code/WebSocket/myproject/clientx/src/Components/Logn-Form/Login-Form.js"],"names":["React","useReducer","Nontification","Reducer","InitialState","ReducerError","Error","GET_LIST_URL_FOR_LOGIN","LoginForm","state","dispatch","errorState","dispatchError","onSubmitForm","e","preventDefault","name","room","password","error","isError","push","console","log","listRoom","fetch","then","res","json","rs","i","length","type","payload","target","value"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react'\nimport Nontification from '../Login-nontification/Login-nontificaton'\nimport Reducer from '../../Reducer/Login'\nimport InitialState from '../../InitiaState/Login'\n// import { Link } from 'react-router-dom'\nimport ReducerError from '../../Reducer/Error'\nimport Error from '../../InitiaState/Error'\nimport { GET_LIST_URL_FOR_LOGIN } from '../../Config/index'\nconst LoginForm = () => {\n\tconst [state, dispatch] = useReducer(Reducer, InitialState)\n\tconst [errorState, dispatchError] = useReducer(ReducerError, Error)\n\tconst onSubmitForm = async (e) => {\n\t\te.preventDefault()\n\t\tconst { name, room, password } = state\n\t\tconst error = []\n\t\tlet isError = false\n\t\t//check if( any thing empty)\n\t\tif (name === '') {\n\t\t\terror.push(\"Name can't be empty\")\n\t\t\tisError = true\n\t\t}\n\t\tif (room === '') {\n\t\t\terror.push(\"Room can't be empty\")\n\t\t\tisError = true\n\t\t}\n\t\tif (password === '') {\n\t\t\terror.push(\"Password can't be empty\")\n\t\t\tisError = true\n\t\t}\n\t\t//if room is exist\n\t\tconsole.log(error)\n\t\tlet listRoom = null\n\t\tawait fetch(GET_LIST_URL_FOR_LOGIN)\n\t\t\t.then((res) => res.json())\n\t\t\t.then(\n\t\t\t\t(rs) => {\n\t\t\t\t\tlistRoom = rs\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tconsole.log(error)\n\t\t\t\t},\n\t\t\t)\n\t\tif (listRoom === null) {\n\t\t\terror.push('Connection Error')\n\t\t\tisError = true\n\t\t} else {\n\t\t\tfor (let i = 0; i < listRoom.length(); ++i) {\n\t\t\t\tconst room = listRoom[i]\n\t\t\t\tif (room.room !== room) {\n\t\t\t\t\terror.push('Room is not exist')\n\t\t\t\t\tisError = true\n\t\t\t\t} else {\n\t\t\t\t\tif (room.password !== password) {\n\t\t\t\t\t\terror.push('Wrong password')\n\t\t\t\t\t\tisError = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(isError) console.log(\"\")\n\t}\n\treturn (\n\t\t<div class='content'>\n\t\t\t<h1>Login</h1>\n\t\t\t<hr />\n\t\t\t<form action=''>\n\t\t\t\t<label htmlFor='name'>Name</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='name'\n\t\t\t\t\tid='name'\n\t\t\t\t\tplaceholder='Enter your name'\n\t\t\t\t\tvalue={state.name}\n\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\ttype: 'UPDATE NAME',\n\t\t\t\t\t\t\tpayload: e.target.value,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<label htmlFor='room'>Room</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='room'\n\t\t\t\t\tid='room'\n\t\t\t\t\tplaceholder='Enter room'\n\t\t\t\t\tvalue={state.room}\n\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\ttype: 'UPDATE ROOM',\n\t\t\t\t\t\t\tpayload: e.target.value,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<label htmlFor='password'>Password</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='password'\n\t\t\t\t\tname='password'\n\t\t\t\t\tid='password'\n\t\t\t\t\tplaceholder='Enter password'\n\t\t\t\t\tvalue={state.password}\n\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\ttype: 'UPDATE PASSWORD',\n\t\t\t\t\t\t\tpayload: e.target.value,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t{/* <Link\n\t\t\t\t\tonClick={(e) =>\n\t\t\t\t\t\tstate.name && state.password && state.room\n\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t: e.preventDefault()\n\t\t\t\t\t}\n\t\t\t\t\tto={`/chat`}\n\t\t\t\t> */}\n\t\t\t\t<button class='btn-sign-in' onClick={(e) => onSubmitForm(e)}>\n\t\t\t\t\tGO\n\t\t\t\t</button>\n\t\t\t\t{/* </Link> */}\n\t\t\t\t<Nontification />\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default LoginForm\n"]},"metadata":{},"sourceType":"module"}