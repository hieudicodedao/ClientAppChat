{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/captainspring/Desktop/code/WebSocket/myproject/clientx/src/Components/ChatBox/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './index.css';\nimport ChatBoxStatusRoom from '../ChatBoxStatusRoom/index';\nimport ChatBoxMessageBox from '../ChatBoxMessageBox/index';\nimport ChatBoxTextMesBtn from '../ChatBoxTextMesBtn/index';\nimport { Redirect, useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport { GET_URL_FOR_SOCKET, GET_URL_FOR_MESSAGES } from '../../Config/index';\nlet socket;\n\nconst Index = () => {\n  _s();\n\n  const param = useParams();\n  const username = localStorage.getItem('username');\n  const [messages, setMessages] = useState([]);\n  const {\n    room\n  } = param;\n\n  const load_messages_from_server = async room => {\n    await fetch(GET_URL_FOR_MESSAGES).then(res => res.json()).then(data => console.log(data), error => console.log(error));\n  };\n\n  useEffect(() => {\n    load_messages_from_server;\n    socket = io(GET_URL_FOR_SOCKET);\n    socket.emit('join', username, room);\n  }, [param]);\n  useEffect(() => {}, []);\n  useEffect(() => {\n    socket.on('message', user_text => {\n      setMessages([...messages, user_text]);\n    });\n  }, [messages]);\n\n  const sendMessage = (msg, obj_date) => {\n    socket.emit('sendMessage', {\n      msg,\n      obj_date\n    });\n    setMessages([...messages, {\n      username: username,\n      text: msg,\n      date: obj_date\n    }]);\n  };\n\n  return localStorage.getItem('username') === null ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"message-board\",\n        children: [/*#__PURE__*/_jsxDEV(ChatBoxStatusRoom, {\n          room: param.room\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ChatBoxMessageBox, {\n          messages: messages,\n          username: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ChatBoxTextMesBtn, {\n          sendMessage: sendMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Index, \"VLikalbg1Q3w1BT5D1DFc0yN/88=\", false, function () {\n  return [useParams];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/captainspring/Desktop/code/WebSocket/myproject/clientx/src/Components/ChatBox/index.js"],"names":["React","useEffect","useState","ChatBoxStatusRoom","ChatBoxMessageBox","ChatBoxTextMesBtn","Redirect","useParams","io","GET_URL_FOR_SOCKET","GET_URL_FOR_MESSAGES","socket","Index","param","username","localStorage","getItem","messages","setMessages","room","load_messages_from_server","fetch","then","res","json","data","console","log","error","emit","on","user_text","sendMessage","msg","obj_date","text","date"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './index.css'\nimport ChatBoxStatusRoom from '../ChatBoxStatusRoom/index'\nimport ChatBoxMessageBox from '../ChatBoxMessageBox/index'\nimport ChatBoxTextMesBtn from '../ChatBoxTextMesBtn/index'\nimport { Redirect, useParams } from 'react-router-dom'\nimport io from 'socket.io-client'\nimport { GET_URL_FOR_SOCKET ,GET_URL_FOR_MESSAGES} from '../../Config/index'\nlet socket\nconst Index = () => {\n\tconst param = useParams()\n\tconst username = localStorage.getItem('username')\n\tconst [messages, setMessages] = useState([])\n\tconst { room } = param\n\tconst load_messages_from_server = async(room) =>{\n\t\tawait fetch(GET_URL_FOR_MESSAGES)\n\t\t\t.then(res => res.json())\n\t\t\t.then(\n\t\t\t\tdata => console.log(data),\n\t\t\t\terror => console.log(error)\n\t\t\t)\n\t}\n\tuseEffect(() => {\n\t\tload_messages_from_server\n\t\tsocket = io(GET_URL_FOR_SOCKET)\n\t\tsocket.emit('join', username, room)\n\t\t\n\t}, [param])\n\tuseEffect(()=>{\n\n\t} ,[])\n\tuseEffect(() => {\n\t\tsocket.on('message', (user_text) => {\n\t\t\tsetMessages([...messages, user_text])\n\t\t})\n\t}, [messages])\n\tconst sendMessage = (msg, obj_date) => {\n\t\tsocket.emit('sendMessage', { msg, obj_date })\n\n\t\tsetMessages([\n\t\t\t...messages,\n\t\t\t{\n\t\t\t\tusername: username,\n\t\t\t\ttext: msg,\n\t\t\t\tdate: obj_date,\n\t\t\t},\n\t\t])\n\t}\n\treturn localStorage.getItem('username') === null ? (\n\t\t<Redirect to='/' />\n\t) : (\n\t\t<div class='body'>\n\t\t\t<div class='main'>\n\t\t\t\t<div class='message-board'>\n\t\t\t\t\t<ChatBoxStatusRoom room={param.room} />\n\t\t\t\t\t<ChatBoxMessageBox\n\t\t\t\t\t\tmessages={messages}\n\t\t\t\t\t\tusername={username}\n\t\t\t\t\t/>\n\t\t\t\t\t<ChatBoxTextMesBtn sendMessage={sendMessage} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}