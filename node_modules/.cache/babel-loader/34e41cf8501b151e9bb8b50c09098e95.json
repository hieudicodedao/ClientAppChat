{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/captainspring/Desktop/code/WebSocket/myproject/clientx/src/Components/ChatBoxWrap/ChatBoxWrap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ChatBox from './../ChatBox/index';\nimport { DO_WE_NEED_RENDER } from './../../Config/index';\nimport { useHistory, useParams } from 'react-router-dom';\n\nconst ChatBoxWrap = () => {\n  _s();\n\n  const [shoulRender, setshoulRender] = useState(false);\n  const history = useHistory();\n  const params = useParams();\n\n  const checkValidate = async () => {\n    fetch(DO_WE_NEED_RENDER, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'authorization-user': ``,\n        'authorization-room': ``\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!localStorage.getItem('token_user')) {\n      history.replaceState('/login');\n      return;\n    }\n\n    if (!localStorage.getItem('token_user')) {\n      history.replaceState('/login');\n      return;\n    }\n\n    checkValidate();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: shoulRender === true ? /*#__PURE__*/_jsxDEV(ChatBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading.....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 49\n    }, this)\n  }, void 0, false);\n};\n\n_s(ChatBoxWrap, \"wV+1Xzqr1gQ/r68rHyFC0eZqPxE=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = ChatBoxWrap;\nexport default ChatBoxWrap;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBoxWrap\");","map":{"version":3,"sources":["/home/captainspring/Desktop/code/WebSocket/myproject/clientx/src/Components/ChatBoxWrap/ChatBoxWrap.js"],"names":["React","useEffect","useState","ChatBox","DO_WE_NEED_RENDER","useHistory","useParams","ChatBoxWrap","shoulRender","setshoulRender","history","params","checkValidate","fetch","method","headers","localStorage","getItem","replaceState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAMQ,OAAO,GAAGL,UAAU,EAA1B;AACA,QAAMM,MAAM,GAAGL,SAAS,EAAxB;;AAEA,QAAMM,aAAa,GAAG,YAAY;AACjCC,IAAAA,KAAK,CAACT,iBAAD,EAAoB;AACxBU,MAAAA,MAAM,EAAE,MADgB;AAExBC,MAAAA,OAAO,EAAE;AACR,wBAAgB,kBADR;AAER,8BAAuB,EAFf;AAGR,8BAAuB;AAHf;AAFe,KAApB,CAAL;AAQA,GATD;;AAUAd,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI,CAACe,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAL,EAAyC;AAC/BP,MAAAA,OAAO,CAACQ,YAAR,CAAqB,QAArB;AACA;AACH;;AACD,QAAI,CAACF,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAL,EAAyC;AACrCP,MAAAA,OAAO,CAACQ,YAAR,CAAqB,QAArB;AACA;AACT;;AACDN,IAAAA,aAAa;AACb,GAVQ,CAAT;AAYA,sBAAO;AAAA,cAAGJ,WAAW,KAAK,IAAhB,gBAAuB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAvB,gBAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxC,mBAAP;AACA,CA5BD;;GAAMD,W;UAEWF,U,EACDC,S;;;KAHVC,W;AA8BN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ChatBox from './../ChatBox/index'\nimport { DO_WE_NEED_RENDER } from './../../Config/index'\nimport { useHistory, useParams } from 'react-router-dom'\n\nconst ChatBoxWrap = () => {\n\tconst [shoulRender, setshoulRender] = useState(false)\n\tconst history = useHistory()\n\tconst params = useParams()\n\n\tconst checkValidate = async () => {\n\t\tfetch(DO_WE_NEED_RENDER, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'authorization-user': ``,\n\t\t\t\t'authorization-room': ``,\n\t\t\t},\n\t\t})\n\t}\n\tuseEffect(() => {\n\t\tif (!localStorage.getItem('token_user')) {\n            history.replaceState('/login')\n            return\n        }\n        if (!localStorage.getItem('token_user')) {\n            history.replaceState('/login')\n            return\n\t\t}\n\t\tcheckValidate()\n\t})\n\n\treturn <>{shoulRender === true ? <ChatBox /> : <h1>Loading.....</h1>}</>\n}\n\nexport default ChatBoxWrap\n"]},"metadata":{},"sourceType":"module"}