{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/captainspring/Desktop/code/WebSocket/myproject/clientx/src/Components/ChatBoxMessageBoxItem/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\n\nconst Index = props => {\n  _s();\n\n  const {\n    message,\n    username\n  } = props;\n  const [sentTime, setSentTime] = useState('');\n\n  const checkTime = () => {\n    let [day, month, year] = new Date().toLocaleDateString('en-GB').split('/');\n    let [hour, minute, second] = new Date().toLocaleTimeString('en-GB').split(/:| /);\n    let {\n      date\n    } = message;\n\n    if (parseInt(date.y) === parseInt(year) && parseInt(date.mo) === parseInt(month) && parseInt(date.d) === parseInt(day)) {\n      console.log('in here');\n\n      if (parseInt(date.h) !== parseInt(hour)) {\n        if (parseInt(hour) - parseInt(date.h)) setSentTime(`${parseInt(hour) - parseInt(date.h)} hours ago`);\n        return;\n      }\n\n      if (parseInt(date.mi) !== parseInt(minute)) {\n        setSentTime(`${parseInt(minute) - parseInt(date.mi)} minutes ago`);\n        return;\n      } else {\n        setSentTime('now');\n        return;\n      }\n    }\n\n    setSentTime(`${date.h}:${date.mi}:${date.s} ${date.d}/${date.mo}/${date.y}`);\n  };\n\n  useEffect(() => {\n    const {\n      date\n    } = message;\n    checkTime();\n    setInterval(checkTime, 30000);\n    return () => {\n      clearInterval();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: message.username === username ? /*#__PURE__*/_jsxDEV(\"li\", {\n      class: \"your-mes message\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-text-date\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          class: \"name\",\n          children: message.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"text\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"your-text-date\",\n        children: [\"Sent : \", sentTime, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n      class: \"another-person-mes message\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-text-date\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          class: \"name\",\n          children: message.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"text\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"another-text-date\",\n        children: [\"Sent : \", sentTime, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Index, \"w3LdZqjH/NxugR0Sb0Ax2rBgpDM=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/captainspring/Desktop/code/WebSocket/myproject/clientx/src/Components/ChatBoxMessageBoxItem/index.js"],"names":["React","useEffect","useState","Index","props","message","username","sentTime","setSentTime","checkTime","day","month","year","Date","toLocaleDateString","split","hour","minute","second","toLocaleTimeString","date","parseInt","y","mo","d","console","log","h","mi","s","setInterval","clearInterval","text"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAwBF,KAA9B;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;;AACA,QAAMO,SAAS,GAAG,MAAM;AACvB,QAAI,CAACC,GAAD,EAAMC,KAAN,EAAaC,IAAb,IAAqB,IAAIC,IAAJ,GACvBC,kBADuB,CACJ,OADI,EAEvBC,KAFuB,CAEjB,GAFiB,CAAzB;AAGA,QAAI,CAACC,IAAD,EAAOC,MAAP,EAAeC,MAAf,IAAyB,IAAIL,IAAJ,GAC3BM,kBAD2B,CACR,OADQ,EAE3BJ,KAF2B,CAErB,KAFqB,CAA7B;AAGA,QAAI;AAAEK,MAAAA;AAAF,QAAWf,OAAf;;AACA,QACCgB,QAAQ,CAACD,IAAI,CAACE,CAAN,CAAR,KAAqBD,QAAQ,CAACT,IAAD,CAA7B,IACAS,QAAQ,CAACD,IAAI,CAACG,EAAN,CAAR,KAAsBF,QAAQ,CAACV,KAAD,CAD9B,IAEAU,QAAQ,CAACD,IAAI,CAACI,CAAN,CAAR,KAAqBH,QAAQ,CAACX,GAAD,CAH9B,EAIE;AACDe,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AACA,UAAIL,QAAQ,CAACD,IAAI,CAACO,CAAN,CAAR,KAAqBN,QAAQ,CAACL,IAAD,CAAjC,EAAyC;AACxC,YAAIK,QAAQ,CAACL,IAAD,CAAR,GAAiBK,QAAQ,CAACD,IAAI,CAACO,CAAN,CAA7B,EACAnB,WAAW,CAAE,GAAEa,QAAQ,CAACL,IAAD,CAAR,GAAiBK,QAAQ,CAACD,IAAI,CAACO,CAAN,CAAS,YAAtC,CAAX;AACA;AACA;;AACD,UAAIN,QAAQ,CAACD,IAAI,CAACQ,EAAN,CAAR,KAAsBP,QAAQ,CAACJ,MAAD,CAAlC,EAA4C;AAC3CT,QAAAA,WAAW,CACT,GAAEa,QAAQ,CAACJ,MAAD,CAAR,GAAmBI,QAAQ,CAACD,IAAI,CAACQ,EAAN,CAAU,cAD9B,CAAX;AAGA;AACA,OALD,MAKO;AACNpB,QAAAA,WAAW,CAAC,KAAD,CAAX;AACA;AACA;AACD;;AAEDA,IAAAA,WAAW,CACT,GAAEY,IAAI,CAACO,CAAE,IAAGP,IAAI,CAACQ,EAAG,IAAGR,IAAI,CAACS,CAAE,IAAGT,IAAI,CAACI,CAAE,IAAGJ,IAAI,CAACG,EAAG,IAAGH,IAAI,CAACE,CAAE,EADpD,CAAX;AAGA,GAjCD;;AAkCArB,EAAAA,SAAS,CAAC,MAAM;AACf,UAAM;AAAEmB,MAAAA;AAAF,QAAWf,OAAjB;AACAI,IAAAA,SAAS;AACTqB,IAAAA,WAAW,CAACrB,SAAD,EAAY,KAAZ,CAAX;AACA,WAAO,MAAM;AACZsB,MAAAA,aAAa;AACb,KAFD;AAGA,GAPQ,EAON,EAPM,CAAT;AAQA,sBACC;AAAA,cACE1B,OAAO,CAACC,QAAR,KAAqBA,QAArB,gBACA;AAAI,MAAA,KAAK,EAAC,kBAAV;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACC;AAAI,UAAA,KAAK,EAAC,MAAV;AAAA,oBAAkBD,OAAO,CAACC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAKC;AAAK,QAAA,KAAK,EAAC,SAAX;AAAA,+BACC;AAAG,UAAA,KAAK,EAAC,MAAT;AAAA,oBAAiBD,OAAO,CAAC2B;AAAzB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cALD,eAQC;AAAG,QAAA,KAAK,EAAC,gBAAT;AAAA,8BAAkCzB,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,cARD;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,gBAYA;AAAI,MAAA,KAAK,EAAC,4BAAV;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACC;AAAI,UAAA,KAAK,EAAC,MAAV;AAAA,oBAAkBF,OAAO,CAACC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAKC;AAAK,QAAA,KAAK,EAAC,SAAX;AAAA,+BACC;AAAG,UAAA,KAAK,EAAC,MAAT;AAAA,oBAAiBD,OAAO,CAAC2B;AAAzB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cALD,eAQC;AAAG,QAAA,KAAK,EAAC,mBAAT;AAAA,8BAAqCzB,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA,cARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAbF,mBADD;AA2BA,CAxED;;GAAMJ,K;;KAAAA,K;AA0EN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nconst Index = (props) => {\n\tconst { message, username } = props\n\tconst [sentTime, setSentTime] = useState('')\n\tconst checkTime = () => {\n\t\tlet [day, month, year] = new Date()\n\t\t\t.toLocaleDateString('en-GB')\n\t\t\t.split('/')\n\t\tlet [hour, minute, second] = new Date()\n\t\t\t.toLocaleTimeString('en-GB')\n\t\t\t.split(/:| /)\n\t\tlet { date } = message\n\t\tif (\n\t\t\tparseInt(date.y) === parseInt(year) &&\n\t\t\tparseInt(date.mo) === parseInt(month) &&\n\t\t\tparseInt(date.d) === parseInt(day)\n\t\t) {\n\t\t\tconsole.log('in here')\n\t\t\tif (parseInt(date.h) !== parseInt(hour)) {\n\t\t\t\tif((parseInt(hour) - parseInt(date.h)))\n\t\t\t\tsetSentTime(`${parseInt(hour) - parseInt(date.h)} hours ago`)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (parseInt(date.mi) !== parseInt(minute)) {\n\t\t\t\tsetSentTime(\n\t\t\t\t\t`${parseInt(minute) - parseInt(date.mi)} minutes ago`,\n\t\t\t\t)\n\t\t\t\treturn\n\t\t\t} else {\n\t\t\t\tsetSentTime('now')\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\n\t\tsetSentTime(\n\t\t\t`${date.h}:${date.mi}:${date.s} ${date.d}/${date.mo}/${date.y}`,\n\t\t)\n\t}\n\tuseEffect(() => {\n\t\tconst { date } = message\n\t\tcheckTime()\n\t\tsetInterval(checkTime, 30000)\n\t\treturn () => {\n\t\t\tclearInterval()\n\t\t}\n\t}, [])\n\treturn (\n\t\t<>\n\t\t\t{message.username === username ? (\n\t\t\t\t<li class='your-mes message'>\n\t\t\t\t\t<div className='name-text-date'>\n\t\t\t\t\t\t<h4 class='name'>{message.username}</h4>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class='content'>\n\t\t\t\t\t\t<p class='text'>{message.text}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p class='your-text-date'>Sent : {sentTime} </p>\n\t\t\t\t</li>\n\t\t\t) : (\n\t\t\t\t<li class='another-person-mes message'>\n\t\t\t\t\t<div className='name-text-date'>\n\t\t\t\t\t\t<h4 class='name'>{message.username}</h4>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class='content'>\n\t\t\t\t\t\t<p class='text'>{message.text}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p class='another-text-date'>Sent : {sentTime} </p>\n\t\t\t\t</li>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}