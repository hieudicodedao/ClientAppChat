{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/captainspring/Desktop/code/WebSocket/myproject/clientx/src/Components/ChatBoxMessageBoxItem/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\n\nconst Index = props => {\n  _s();\n\n  const {\n    message,\n    username\n  } = props;\n  const [sentTime, setSentTime] = useState('now');\n\n  const checkTime = () => {\n    let [month, day, year] = new Date().toLocaleDateString('en-US').split('/');\n    let [hour, minute, second] = new Date().toLocaleTimeString('en-US').split(/:| /); // let { date } = message\n    // if (date.y === year && date.mo === month && date.d === day) {\n    // \tif (date.h === hour) {\n    // \t\tsetSentTime(`${hour - date.h} hours ago`)\n    // \t}\n    // \tif (date.m === minute) {\n    // \t\tsetSentTime(`${minute - date.mi} minutes ago`)\n    // \t\treturn\n    // \t} else {\n    // \t\tsetSentTime('now')\n    // \t\treturn\n    // \t}\n    // }\n  };\n\n  useEffect(() => {\n    console.log(message.date);\n    setInterval(checkTime, 1000);\n    return () => {\n      clearInterval();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: message.username === username ? /*#__PURE__*/_jsxDEV(\"li\", {\n      class: \"your-mes message\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"text\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          class: \"name\",\n          children: [username, /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"your-text-date\",\n            children: [\"Sent : \", sentTime, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n      class: \"another-person-mes message\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          class: \"name\",\n          children: [username, /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"another-text-date\",\n            children: [\"Sent : \", setInterval(checkTime, 1000)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"text\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Index, \"VC7nlJ+gKM/r4vzS2yRaLrY+ejc=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/captainspring/Desktop/code/WebSocket/myproject/clientx/src/Components/ChatBoxMessageBoxItem/index.js"],"names":["React","useEffect","useState","Index","props","message","username","sentTime","setSentTime","checkTime","month","day","year","Date","toLocaleDateString","split","hour","minute","second","toLocaleTimeString","console","log","date","setInterval","clearInterval","text"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAwBF,KAA9B;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMO,SAAS,GAAG,MAAM;AACvB,QAAI,CAACC,KAAD,EAAQC,GAAR,EAAaC,IAAb,IAAqB,IAAIC,IAAJ,GACvBC,kBADuB,CACJ,OADI,EAEvBC,KAFuB,CAEjB,GAFiB,CAAzB;AAGA,QAAI,CAACC,IAAD,EAAOC,MAAP,EAAeC,MAAf,IAAyB,IAAIL,IAAJ,GAC3BM,kBAD2B,CACR,OADQ,EAE3BJ,KAF2B,CAErB,KAFqB,CAA7B,CAJuB,CAOvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GApBD;;AAqBAd,EAAAA,SAAS,CAAC,MAAM;AACfmB,IAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAO,CAACiB,IAApB;AACAC,IAAAA,WAAW,CAACd,SAAD,EAAY,IAAZ,CAAX;AACA,WAAO,MAAM;AACZe,MAAAA,aAAa;AACb,KAFD;AAGA,GANQ,EAMN,EANM,CAAT;AAOA,sBACC;AAAA,cACEnB,OAAO,CAACC,QAAR,KAAqBA,QAArB,gBACA;AAAI,MAAA,KAAK,EAAC,kBAAV;AAAA,6BACC;AAAK,QAAA,KAAK,EAAC,SAAX;AAAA,gCACC;AAAG,UAAA,KAAK,EAAC,MAAT;AAAA,oBAAiBD,OAAO,CAACoB;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAI,UAAA,KAAK,EAAC,MAAV;AAAA,qBACEnB,QADF,eAEC;AAAG,YAAA,KAAK,EAAC,gBAAT;AAAA,kCAAkCC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADA,gBAWA;AAAI,MAAA,KAAK,EAAC,4BAAV;AAAA,6BACC;AAAK,QAAA,KAAK,EAAC,SAAX;AAAA,gCACC;AAAI,UAAA,KAAK,EAAC,MAAV;AAAA,qBACED,QADF,eAEC;AAAG,YAAA,KAAK,EAAC,mBAAT;AAAA,kCACSiB,WAAW,CAACd,SAAD,EAAY,IAAZ,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAOC;AAAG,UAAA,KAAK,EAAC,MAAT;AAAA,oBAAiBJ,OAAO,CAACoB;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAZF,mBADD;AA2BA,CA1DD;;GAAMtB,K;;KAAAA,K;AA4DN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst Index = (props) => {\n\tconst { message, username } = props\n\tconst [sentTime, setSentTime] = useState('now')\n\tconst checkTime = () => {\n\t\tlet [month, day, year] = new Date()\n\t\t\t.toLocaleDateString('en-US')\n\t\t\t.split('/')\n\t\tlet [hour, minute, second] = new Date()\n\t\t\t.toLocaleTimeString('en-US')\n\t\t\t.split(/:| /)\n\t\t// let { date } = message\n\t\t// if (date.y === year && date.mo === month && date.d === day) {\n\t\t// \tif (date.h === hour) {\n\t\t// \t\tsetSentTime(`${hour - date.h} hours ago`)\n\t\t// \t}\n\t\t// \tif (date.m === minute) {\n\t\t// \t\tsetSentTime(`${minute - date.mi} minutes ago`)\n\t\t// \t\treturn\n\t\t// \t} else {\n\t\t// \t\tsetSentTime('now')\n\t\t// \t\treturn\n\t\t// \t}\n\t\t// }\n\t}\n\tuseEffect(() => {\n\t\tconsole.log(message.date)\n\t\tsetInterval(checkTime, 1000)\n\t\treturn () => {\n\t\t\tclearInterval()\n\t\t}\n\t}, [])\n\treturn (\n\t\t<>\n\t\t\t{message.username === username ? (\n\t\t\t\t<li class='your-mes message'>\n\t\t\t\t\t<div class='content'>\n\t\t\t\t\t\t<p class='text'>{message.text}</p>\n\t\t\t\t\t\t<h4 class='name'>\n\t\t\t\t\t\t\t{username}\n\t\t\t\t\t\t\t<p class='your-text-date'>Sent : {sentTime} </p>\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t) : (\n\t\t\t\t<li class='another-person-mes message'>\n\t\t\t\t\t<div class='content'>\n\t\t\t\t\t\t<h4 class='name'>\n\t\t\t\t\t\t\t{username}\n\t\t\t\t\t\t\t<p class='another-text-date'>\n\t\t\t\t\t\t\t\tSent : {setInterval(checkTime, 1000)}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<p class='text'>{message.text}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}